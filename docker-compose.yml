version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=acc_store
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/usr/src/app/uploads:rw
    networks:
      - app-network
    restart: unless-stopped
    command: sh -c "ls -la dist/ && node dist/src/main.js"

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=acc_store
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 30s
    restart: unless-stopped

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: 